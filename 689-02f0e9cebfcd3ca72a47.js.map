{"version":3,"file":"689-02f0e9cebfcd3ca72a47.js","mappings":"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","sources":["webpack://cryptography-website/./node_modules/mermaid/dist/classDiagram-70f12bd4.js"],"sourcesContent":["import { p as parser, d as db, s as styles } from \"./styles-9a916d00.js\";\nimport { line, curveBasis, select } from \"d3\";\nimport { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { u as utils, l as log, x as parseGenericTypes, c as getConfig, i as configureSvgSize } from \"./mermaid-b5860b54.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nlet edgeCount = 0;\nconst drawEdge = function(elem, path, relation, conf, diagObj) {\n  const getRelationType = function(type) {\n    switch (type) {\n      case diagObj.db.relationType.AGGREGATION:\n        return \"aggregation\";\n      case diagObj.db.relationType.EXTENSION:\n        return \"extension\";\n      case diagObj.db.relationType.COMPOSITION:\n        return \"composition\";\n      case diagObj.db.relationType.DEPENDENCY:\n        return \"dependency\";\n      case diagObj.db.relationType.LOLLIPOP:\n        return \"lollipop\";\n    }\n  };\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"relation\");\n  let url = \"\";\n  if (conf.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  if (relation.relation.lineType == 1) {\n    svgPath.attr(\"class\", \"relation dashed-line\");\n  }\n  if (relation.relation.lineType == 10) {\n    svgPath.attr(\"class\", \"relation dotted-line\");\n  }\n  if (relation.relation.type1 !== \"none\") {\n    svgPath.attr(\n      \"marker-start\",\n      \"url(\" + url + \"#\" + getRelationType(relation.relation.type1) + \"Start)\"\n    );\n  }\n  if (relation.relation.type2 !== \"none\") {\n    svgPath.attr(\n      \"marker-end\",\n      \"url(\" + url + \"#\" + getRelationType(relation.relation.type2) + \"End)\"\n    );\n  }\n  let x, y;\n  const l = path.points.length;\n  let labelPosition = utils.calcLabelPosition(path.points);\n  x = labelPosition.x;\n  y = labelPosition.y;\n  let p1_card_x, p1_card_y;\n  let p2_card_x, p2_card_y;\n  if (l % 2 !== 0 && l > 1) {\n    let cardinality_1_point = utils.calcCardinalityPosition(\n      relation.relation.type1 !== \"none\",\n      path.points,\n      path.points[0]\n    );\n    let cardinality_2_point = utils.calcCardinalityPosition(\n      relation.relation.type2 !== \"none\",\n      path.points,\n      path.points[l - 1]\n    );\n    log.debug(\"cardinality_1_point \" + JSON.stringify(cardinality_1_point));\n    log.debug(\"cardinality_2_point \" + JSON.stringify(cardinality_2_point));\n    p1_card_x = cardinality_1_point.x;\n    p1_card_y = cardinality_1_point.y;\n    p2_card_x = cardinality_2_point.x;\n    p2_card_y = cardinality_2_point.y;\n  }\n  if (relation.title !== void 0) {\n    const g = elem.append(\"g\").attr(\"class\", \"classLabel\");\n    const label = g.append(\"text\").attr(\"class\", \"label\").attr(\"x\", x).attr(\"y\", y).attr(\"fill\", \"red\").attr(\"text-anchor\", \"middle\").text(relation.title);\n    window.label = label;\n    const bounds = label.node().getBBox();\n    g.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", bounds.x - conf.padding / 2).attr(\"y\", bounds.y - conf.padding / 2).attr(\"width\", bounds.width + conf.padding).attr(\"height\", bounds.height + conf.padding);\n  }\n  log.info(\"Rendering relation \" + JSON.stringify(relation));\n  if (relation.relationTitle1 !== void 0 && relation.relationTitle1 !== \"none\") {\n    const g = elem.append(\"g\").attr(\"class\", \"cardinality\");\n    g.append(\"text\").attr(\"class\", \"type1\").attr(\"x\", p1_card_x).attr(\"y\", p1_card_y).attr(\"fill\", \"black\").attr(\"font-size\", \"6\").text(relation.relationTitle1);\n  }\n  if (relation.relationTitle2 !== void 0 && relation.relationTitle2 !== \"none\") {\n    const g = elem.append(\"g\").attr(\"class\", \"cardinality\");\n    g.append(\"text\").attr(\"class\", \"type2\").attr(\"x\", p2_card_x).attr(\"y\", p2_card_y).attr(\"fill\", \"black\").attr(\"font-size\", \"6\").text(relation.relationTitle2);\n  }\n  edgeCount++;\n};\nconst drawClass = function(elem, classDef, conf, diagObj) {\n  log.debug(\"Rendering class \", classDef, conf);\n  const id = classDef.id;\n  const classInfo = {\n    id,\n    label: classDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", diagObj.db.lookUpDomId(id)).attr(\"class\", \"classGroup\");\n  let title;\n  if (classDef.link) {\n    title = g.append(\"svg:a\").attr(\"xlink:href\", classDef.link).attr(\"target\", classDef.linkTarget).append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  } else {\n    title = g.append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  }\n  let isFirst = true;\n  classDef.annotations.forEach(function(member) {\n    const titleText2 = title.append(\"tspan\").text(\"«\" + member + \"»\");\n    if (!isFirst) {\n      titleText2.attr(\"dy\", conf.textHeight);\n    }\n    isFirst = false;\n  });\n  let classTitleString = getClassTitleString(classDef);\n  const classTitle = title.append(\"tspan\").text(classTitleString).attr(\"class\", \"title\");\n  if (!isFirst) {\n    classTitle.attr(\"dy\", conf.textHeight);\n  }\n  const titleHeight = title.node().getBBox().height;\n  let membersLine;\n  let membersBox;\n  let methodsLine;\n  if (classDef.members.length > 0) {\n    membersLine = g.append(\"line\").attr(\"x1\", 0).attr(\"y1\", conf.padding + titleHeight + conf.dividerMargin / 2).attr(\"y2\", conf.padding + titleHeight + conf.dividerMargin / 2);\n    const members = g.append(\"text\").attr(\"x\", conf.padding).attr(\"y\", titleHeight + conf.dividerMargin + conf.textHeight).attr(\"fill\", \"white\").attr(\"class\", \"classText\");\n    isFirst = true;\n    classDef.members.forEach(function(member) {\n      addTspan(members, member, isFirst, conf);\n      isFirst = false;\n    });\n    membersBox = members.node().getBBox();\n  }\n  if (classDef.methods.length > 0) {\n    methodsLine = g.append(\"line\").attr(\"x1\", 0).attr(\"y1\", conf.padding + titleHeight + conf.dividerMargin + membersBox.height).attr(\"y2\", conf.padding + titleHeight + conf.dividerMargin + membersBox.height);\n    const methods = g.append(\"text\").attr(\"x\", conf.padding).attr(\"y\", titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight).attr(\"fill\", \"white\").attr(\"class\", \"classText\");\n    isFirst = true;\n    classDef.methods.forEach(function(method) {\n      addTspan(methods, method, isFirst, conf);\n      isFirst = false;\n    });\n  }\n  const classBox = g.node().getBBox();\n  var cssClassStr = \" \";\n  if (classDef.cssClasses.length > 0) {\n    cssClassStr = cssClassStr + classDef.cssClasses.join(\" \");\n  }\n  const rect = g.insert(\"rect\", \":first-child\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", classBox.width + 2 * conf.padding).attr(\"height\", classBox.height + conf.padding + 0.5 * conf.dividerMargin).attr(\"class\", cssClassStr);\n  const rectWidth = rect.node().getBBox().width;\n  title.node().childNodes.forEach(function(x) {\n    x.setAttribute(\"x\", (rectWidth - x.getBBox().width) / 2);\n  });\n  if (classDef.tooltip) {\n    title.insert(\"title\").text(classDef.tooltip);\n  }\n  if (membersLine) {\n    membersLine.attr(\"x2\", rectWidth);\n  }\n  if (methodsLine) {\n    methodsLine.attr(\"x2\", rectWidth);\n  }\n  classInfo.width = rectWidth;\n  classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n  return classInfo;\n};\nconst getClassTitleString = function(classDef) {\n  let classTitleString = classDef.id;\n  if (classDef.type) {\n    classTitleString += \"<\" + parseGenericTypes(classDef.type) + \">\";\n  }\n  return classTitleString;\n};\nconst drawNote = function(elem, note, conf, diagObj) {\n  log.debug(\"Rendering note \", note, conf);\n  const id = note.id;\n  const noteInfo = {\n    id,\n    text: note.text,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"classGroup\");\n  let text = g.append(\"text\").attr(\"y\", conf.textHeight + conf.padding).attr(\"x\", 0);\n  const lines = JSON.parse(`\"${note.text}\"`).split(\"\\n\");\n  lines.forEach(function(line2) {\n    log.debug(`Adding line: ${line2}`);\n    text.append(\"tspan\").text(line2).attr(\"class\", \"title\").attr(\"dy\", conf.textHeight);\n  });\n  const noteBox = g.node().getBBox();\n  const rect = g.insert(\"rect\", \":first-child\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", noteBox.width + 2 * conf.padding).attr(\n    \"height\",\n    noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin\n  );\n  const rectWidth = rect.node().getBBox().width;\n  text.node().childNodes.forEach(function(x) {\n    x.setAttribute(\"x\", (rectWidth - x.getBBox().width) / 2);\n  });\n  noteInfo.width = rectWidth;\n  noteInfo.height = noteBox.height + lines.length * conf.textHeight + conf.padding + 0.5 * conf.dividerMargin;\n  return noteInfo;\n};\nconst addTspan = function(textEl, member, isFirst, conf) {\n  const { displayText, cssStyle } = member.getDisplayDetails();\n  const tSpan = textEl.append(\"tspan\").attr(\"x\", conf.padding).text(displayText);\n  if (cssStyle !== \"\") {\n    tSpan.attr(\"style\", member.cssStyle);\n  }\n  if (!isFirst) {\n    tSpan.attr(\"dy\", conf.textHeight);\n  }\n};\nconst svgDraw = {\n  getClassTitleString,\n  drawClass,\n  drawEdge,\n  drawNote\n};\nlet idCache = {};\nconst padding = 20;\nconst getGraphId = function(label) {\n  const foundEntry = Object.entries(idCache).find((entry) => entry[1].label === label);\n  if (foundEntry) {\n    return foundEntry[0];\n  }\n};\nconst insertMarkers = function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"extensionStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,7 L18,13 V 1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"extensionEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 1,1 V 13 L18,7 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"compositionStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"compositionEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"aggregationStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"aggregationEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyStart\").attr(\"class\", \"extension\").attr(\"refX\", 0).attr(\"refY\", 7).attr(\"markerWidth\", 190).attr(\"markerHeight\", 240).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 5,7 L9,13 L1,7 L9,1 Z\");\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 18,7 L9,13 L14,7 L9,1 Z\");\n};\nconst draw = function(text, id, _version, diagObj) {\n  const conf = getConfig().class;\n  idCache = {};\n  log.info(\"Rendering diagram \" + text);\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const g = new graphlib.Graph({\n    multigraph: true\n  });\n  g.setGraph({\n    isMultiGraph: true\n  });\n  g.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const classes = diagObj.db.getClasses();\n  const keys = Object.keys(classes);\n  for (const key of keys) {\n    const classDef = classes[key];\n    const node = svgDraw.drawClass(diagram2, classDef, conf, diagObj);\n    idCache[node.id] = node;\n    g.setNode(node.id, node);\n    log.info(\"Org height: \" + node.height);\n  }\n  const relations = diagObj.db.getRelations();\n  relations.forEach(function(relation) {\n    log.info(\n      // cspell:ignore tjoho\n      \"tjoho\" + getGraphId(relation.id1) + getGraphId(relation.id2) + JSON.stringify(relation)\n    );\n    g.setEdge(\n      getGraphId(relation.id1),\n      getGraphId(relation.id2),\n      {\n        relation\n      },\n      relation.title || \"DEFAULT\"\n    );\n  });\n  const notes = diagObj.db.getNotes();\n  notes.forEach(function(note) {\n    log.debug(`Adding note: ${JSON.stringify(note)}`);\n    const node = svgDraw.drawNote(diagram2, note, conf, diagObj);\n    idCache[node.id] = node;\n    g.setNode(node.id, node);\n    if (note.class && note.class in classes) {\n      g.setEdge(\n        note.id,\n        getGraphId(note.class),\n        {\n          relation: {\n            id1: note.id,\n            id2: note.class,\n            relation: {\n              type1: \"none\",\n              type2: \"none\",\n              lineType: 10\n            }\n          }\n        },\n        \"DEFAULT\"\n      );\n    }\n  });\n  layout(g);\n  g.nodes().forEach(function(v) {\n    if (v !== void 0 && g.node(v) !== void 0) {\n      log.debug(\"Node \" + v + \": \" + JSON.stringify(g.node(v)));\n      root.select(\"#\" + (diagObj.db.lookUpDomId(v) || v)).attr(\n        \"transform\",\n        \"translate(\" + (g.node(v).x - g.node(v).width / 2) + \",\" + (g.node(v).y - g.node(v).height / 2) + \" )\"\n      );\n    }\n  });\n  g.edges().forEach(function(e) {\n    if (e !== void 0 && g.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(g.edge(e)));\n      svgDraw.drawEdge(diagram2, g.edge(e), g.edge(e).relation, conf, diagObj);\n    }\n  });\n  const svgBounds = diagram2.node().getBBox();\n  const width = svgBounds.width + padding * 2;\n  const height = svgBounds.height + padding * 2;\n  configureSvgSize(diagram2, height, width, conf.useMaxWidth);\n  const vBox = `${svgBounds.x - padding} ${svgBounds.y - padding} ${width} ${height}`;\n  log.debug(`viewBox ${vBox}`);\n  diagram2.attr(\"viewBox\", vBox);\n};\nconst renderer = {\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["edgeCount","getClassTitleString","classDef","classTitleString","id","type","addTspan","textEl","member","isFirst","conf","displayText","cssStyle","getDisplayDetails","tSpan","append","attr","padding","text","textHeight","svgDraw","elem","diagObj","l","debug","classInfo","label","width","height","g","db","lookUpDomId","title","link","linkTarget","annotations","forEach","titleText2","classTitle","titleHeight","node","getBBox","membersLine","membersBox","methodsLine","members","length","dividerMargin","methods","method","classBox","cssClassStr","cssClasses","join","rectWidth","insert","childNodes","x","setAttribute","tooltip","path","relation","getRelationType","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","LOLLIPOP","points","filter","p","Number","isNaN","y","lineData","lineFunction","d","curve","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","replace","lineType","type1","type2","p1_card_x","p1_card_y","p2_card_x","p2_card_y","labelPosition","u","calcLabelPosition","cardinality_1_point","calcCardinalityPosition","cardinality_2_point","JSON","stringify","bounds","info","relationTitle1","relationTitle2","note","noteInfo","lines","parse","split","line2","noteBox","idCache","getGraphId","foundEntry","Object","entries","find","entry","renderer","draw","_version","class","securityLevel","sandboxElement","root","nodes","contentDocument","body","diagram2","select","multigraph","setGraph","isMultiGraph","setDefaultEdgeLabel","classes","getClasses","keys","key","setNode","getRelations","id1","id2","setEdge","getNotes","v","edges","e","edge","w","svgBounds","useMaxWidth","vBox","diagram","parser","styles","init","cnf","clear"],"sourceRoot":""}