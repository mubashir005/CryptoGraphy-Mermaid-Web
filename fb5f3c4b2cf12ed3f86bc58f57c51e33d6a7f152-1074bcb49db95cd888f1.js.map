{"version":3,"file":"fb5f3c4b2cf12ed3f86bc58f57c51e33d6a7f152-1074bcb49db95cd888f1.js","mappings":"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","sources":["webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/data/list.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/greedy-fas.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/acyclic.js","webpack://cryptography-website/./node_modules/lodash-es/_baseExtremum.js","webpack://cryptography-website/./node_modules/lodash-es/_baseGt.js","webpack://cryptography-website/./node_modules/lodash-es/max.js","webpack://cryptography-website/./node_modules/lodash-es/last.js","webpack://cryptography-website/./node_modules/lodash-es/mapValues.js","webpack://cryptography-website/./node_modules/lodash-es/_baseLt.js","webpack://cryptography-website/./node_modules/lodash-es/min.js","webpack://cryptography-website/./node_modules/lodash-es/now.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/util.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/add-border-segments.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/coordinate-system.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/normalize.js","webpack://cryptography-website/./node_modules/lodash-es/minBy.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/rank/util.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js","webpack://cryptography-website/./node_modules/lodash-es/_createFind.js","webpack://cryptography-website/./node_modules/lodash-es/toInteger.js","webpack://cryptography-website/./node_modules/lodash-es/findIndex.js","webpack://cryptography-website/./node_modules/lodash-es/find.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/graphlib/alg/dijkstra.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/graphlib/alg/floyd-warshall.js","webpack://cryptography-website/./node_modules/lodash-es/_asciiSize.js","webpack://cryptography-website/./node_modules/lodash-es/_hasUnicode.js","webpack://cryptography-website/./node_modules/lodash-es/_unicodeSize.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/graphlib/alg/topsort.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/graphlib/alg/dfs.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/graphlib/alg/postorder.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/graphlib/alg/preorder.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/rank/index.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/nesting-graph.js","webpack://cryptography-website/./node_modules/lodash-es/cloneDeep.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/build-layer-graph.js","webpack://cryptography-website/./node_modules/lodash-es/_baseZipObject.js","webpack://cryptography-website/./node_modules/lodash-es/zipObject.js","webpack://cryptography-website/./node_modules/lodash-es/_baseSortBy.js","webpack://cryptography-website/./node_modules/lodash-es/_compareAscending.js","webpack://cryptography-website/./node_modules/lodash-es/_compareMultiple.js","webpack://cryptography-website/./node_modules/lodash-es/_baseOrderBy.js","webpack://cryptography-website/./node_modules/lodash-es/sortBy.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/cross-count.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/resolve-conflicts.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/sort.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/sort-subgraph.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/barycenter.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/index.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/init-order.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/parent-dummy-chains.js","webpack://cryptography-website/./node_modules/lodash-es/forOwn.js","webpack://cryptography-website/./node_modules/lodash-es/forIn.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/position/bk.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/position/index.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/dagre/layout.js","webpack://cryptography-website/./node_modules/lodash-es/_baseIsNaN.js","webpack://cryptography-website/./node_modules/lodash-es/_strictIndexOf.js","webpack://cryptography-website/./node_modules/lodash-es/_baseIndexOf.js","webpack://cryptography-website/./node_modules/lodash-es/_arrayIncludes.js","webpack://cryptography-website/./node_modules/lodash-es/_arrayIncludesWith.js","webpack://cryptography-website/./node_modules/lodash-es/noop.js","webpack://cryptography-website/./node_modules/lodash-es/_createSet.js","webpack://cryptography-website/./node_modules/lodash-es/_baseUniq.js","webpack://cryptography-website/./node_modules/lodash-es/union.js","webpack://cryptography-website/./node_modules/dagre-d3-es/src/graphlib/graph.js","webpack://cryptography-website/./node_modules/lodash-es/_setCacheAdd.js","webpack://cryptography-website/./node_modules/lodash-es/_setCacheHas.js","webpack://cryptography-website/./node_modules/lodash-es/_SetCache.js","webpack://cryptography-website/./node_modules/lodash-es/_arrayEach.js","webpack://cryptography-website/./node_modules/lodash-es/_arrayFilter.js","webpack://cryptography-website/./node_modules/lodash-es/_arrayMap.js","webpack://cryptography-website/./node_modules/lodash-es/_arrayPush.js","webpack://cryptography-website/./node_modules/lodash-es/_baseAssign.js","webpack://cryptography-website/./node_modules/lodash-es/_baseAssignIn.js","webpack://cryptography-website/./node_modules/lodash-es/_copySymbols.js","webpack://cryptography-website/./node_modules/lodash-es/_getSymbolsIn.js","webpack://cryptography-website/./node_modules/lodash-es/_copySymbolsIn.js","webpack://cryptography-website/./node_modules/lodash-es/_getAllKeysIn.js","webpack://cryptography-website/./node_modules/lodash-es/_initCloneArray.js","webpack://cryptography-website/./node_modules/lodash-es/_cloneDataView.js","webpack://cryptography-website/./node_modules/lodash-es/_cloneRegExp.js","webpack://cryptography-website/./node_modules/lodash-es/_cloneSymbol.js","webpack://cryptography-website/./node_modules/lodash-es/_initCloneByTag.js","webpack://cryptography-website/./node_modules/lodash-es/_baseIsMap.js","webpack://cryptography-website/./node_modules/lodash-es/isMap.js","webpack://cryptography-website/./node_modules/lodash-es/_baseIsSet.js","webpack://cryptography-website/./node_modules/lodash-es/isSet.js","webpack://cryptography-website/./node_modules/lodash-es/_baseClone.js","webpack://cryptography-website/./node_modules/lodash-es/_createBaseEach.js","webpack://cryptography-website/./node_modules/lodash-es/_baseEach.js","webpack://cryptography-website/./node_modules/lodash-es/_baseFindIndex.js","webpack://cryptography-website/./node_modules/lodash-es/_isFlattenable.js","webpack://cryptography-website/./node_modules/lodash-es/_baseFlatten.js","webpack://cryptography-website/./node_modules/lodash-es/_baseForOwn.js","webpack://cryptography-website/./node_modules/lodash-es/_baseGet.js","webpack://cryptography-website/./node_modules/lodash-es/_baseGetAllKeys.js","webpack://cryptography-website/./node_modules/lodash-es/_arraySome.js","webpack://cryptography-website/./node_modules/lodash-es/_equalArrays.js","webpack://cryptography-website/./node_modules/lodash-es/_mapToArray.js","webpack://cryptography-website/./node_modules/lodash-es/_equalByTag.js","webpack://cryptography-website/./node_modules/lodash-es/_equalObjects.js","webpack://cryptography-website/./node_modules/lodash-es/_baseIsEqualDeep.js","webpack://cryptography-website/./node_modules/lodash-es/_baseIsEqual.js","webpack://cryptography-website/./node_modules/lodash-es/_baseIsMatch.js","webpack://cryptography-website/./node_modules/lodash-es/_isStrictComparable.js","webpack://cryptography-website/./node_modules/lodash-es/_getMatchData.js","webpack://cryptography-website/./node_modules/lodash-es/_matchesStrictComparable.js","webpack://cryptography-website/./node_modules/lodash-es/_baseMatches.js","webpack://cryptography-website/./node_modules/lodash-es/get.js","webpack://cryptography-website/./node_modules/lodash-es/_baseMatchesProperty.js","webpack://cryptography-website/./node_modules/lodash-es/_basePropertyDeep.js","webpack://cryptography-website/./node_modules/lodash-es/property.js","webpack://cryptography-website/./node_modules/lodash-es/_baseIteratee.js","webpack://cryptography-website/./node_modules/lodash-es/_baseMap.js","webpack://cryptography-website/./node_modules/lodash-es/_baseProperty.js","webpack://cryptography-website/./node_modules/lodash-es/_cacheHas.js","webpack://cryptography-website/./node_modules/lodash-es/_castFunction.js","webpack://cryptography-website/./node_modules/lodash-es/_memoizeCapped.js","webpack://cryptography-website/./node_modules/lodash-es/_stringToPath.js","webpack://cryptography-website/./node_modules/lodash-es/_castPath.js","webpack://cryptography-website/./node_modules/lodash-es/_getAllKeys.js","webpack://cryptography-website/./node_modules/lodash-es/_getSymbols.js","webpack://cryptography-website/./node_modules/lodash-es/_hasPath.js","webpack://cryptography-website/./node_modules/lodash-es/_isKey.js","webpack://cryptography-website/./node_modules/lodash-es/_setToArray.js","webpack://cryptography-website/./node_modules/lodash-es/_toKey.js","webpack://cryptography-website/./node_modules/lodash-es/defaults.js","webpack://cryptography-website/./node_modules/lodash-es/_baseFilter.js","webpack://cryptography-website/./node_modules/lodash-es/filter.js","webpack://cryptography-website/./node_modules/lodash-es/flatten.js","webpack://cryptography-website/./node_modules/lodash-es/forEach.js","webpack://cryptography-website/./node_modules/lodash-es/_baseHas.js","webpack://cryptography-website/./node_modules/lodash-es/has.js","webpack://cryptography-website/./node_modules/lodash-es/_baseHasIn.js","webpack://cryptography-website/./node_modules/lodash-es/hasIn.js","webpack://cryptography-website/./node_modules/lodash-es/isSymbol.js","webpack://cryptography-website/./node_modules/lodash-es/isUndefined.js","webpack://cryptography-website/./node_modules/lodash-es/keys.js","webpack://cryptography-website/./node_modules/lodash-es/map.js","webpack://cryptography-website/./node_modules/lodash-es/_baseSet.js","webpack://cryptography-website/./node_modules/lodash-es/_basePickBy.js","webpack://cryptography-website/./node_modules/lodash-es/_basePick.js","webpack://cryptography-website/./node_modules/lodash-es/_flatRest.js","webpack://cryptography-website/./node_modules/lodash-es/pick.js","webpack://cryptography-website/./node_modules/lodash-es/_baseRange.js","webpack://cryptography-website/./node_modules/lodash-es/_createRange.js","webpack://cryptography-website/./node_modules/lodash-es/range.js","webpack://cryptography-website/./node_modules/lodash-es/_arrayReduce.js","webpack://cryptography-website/./node_modules/lodash-es/_baseReduce.js","webpack://cryptography-website/./node_modules/lodash-es/reduce.js","webpack://cryptography-website/./node_modules/lodash-es/stubArray.js","webpack://cryptography-website/./node_modules/lodash-es/_trimmedEndIndex.js","webpack://cryptography-website/./node_modules/lodash-es/_baseTrim.js","webpack://cryptography-website/./node_modules/lodash-es/toNumber.js","webpack://cryptography-website/./node_modules/lodash-es/toFinite.js","webpack://cryptography-website/./node_modules/lodash-es/_baseToString.js","webpack://cryptography-website/./node_modules/lodash-es/toString.js","webpack://cryptography-website/./node_modules/lodash-es/uniqueId.js","webpack://cryptography-website/./node_modules/lodash-es/_baseValues.js","webpack://cryptography-website/./node_modules/lodash-es/values.js","webpack://cryptography-website/./node_modules/mdast-util-from-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://cryptography-website/./node_modules/micromark-util-chunked/index.js","webpack://cryptography-website/./node_modules/micromark-util-combine-extensions/index.js","webpack://cryptography-website/./node_modules/micromark-factory-space/index.js","webpack://cryptography-website/./node_modules/micromark/lib/initialize/content.js","webpack://cryptography-website/./node_modules/micromark/lib/initialize/document.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://cryptography-website/./node_modules/micromark-util-subtokenize/index.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/content.js","webpack://cryptography-website/./node_modules/micromark/lib/initialize/flow.js","webpack://cryptography-website/./node_modules/micromark/lib/initialize/text.js","webpack://cryptography-website/./node_modules/micromark-util-resolve-all/index.js","webpack://cryptography-website/./node_modules/micromark/lib/create-tokenizer.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/list.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://cryptography-website/./node_modules/micromark-factory-destination/index.js","webpack://cryptography-website/./node_modules/micromark-factory-label/index.js","webpack://cryptography-website/./node_modules/micromark-factory-title/index.js","webpack://cryptography-website/./node_modules/micromark-factory-whitespace/index.js","webpack://cryptography-website/./node_modules/micromark-util-normalize-identifier/index.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://cryptography-website/./node_modules/micromark-util-html-tag-name/index.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://cryptography-website/./node_modules/decode-named-character-reference/index.dom.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://cryptography-website/./node_modules/micromark-util-classify-character/index.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://cryptography-website/./node_modules/micromark/lib/constructs.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://cryptography-website/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://cryptography-website/./node_modules/micromark/lib/parse.js","webpack://cryptography-website/./node_modules/micromark/lib/preprocess.js","webpack://cryptography-website/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://cryptography-website/./node_modules/micromark-util-decode-string/index.js","webpack://cryptography-website/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://cryptography-website/./node_modules/micromark/lib/postprocess.js","webpack://cryptography-website/./node_modules/mermaid/dist/createText-2e5e7dd3.js","webpack://cryptography-website/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://cryptography-website/./node_modules/micromark-util-character/index.js","webpack://cryptography-website/./node_modules/unist-util-stringify-position/lib/index.js"],"sourcesContent":["/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nexport { List };\n\nclass List {\n  constructor() {\n    var sentinel = {};\n    sentinel._next = sentinel._prev = sentinel;\n    this._sentinel = sentinel;\n  }\n  dequeue() {\n    var sentinel = this._sentinel;\n    var entry = sentinel._prev;\n    if (entry !== sentinel) {\n      unlink(entry);\n      return entry;\n    }\n  }\n  enqueue(entry) {\n    var sentinel = this._sentinel;\n    if (entry._prev && entry._next) {\n      unlink(entry);\n    }\n    entry._next = sentinel._next;\n    sentinel._next._prev = entry;\n    sentinel._next = entry;\n    entry._prev = sentinel;\n  }\n  toString() {\n    var strs = [];\n    var sentinel = this._sentinel;\n    var curr = sentinel._prev;\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr._prev;\n    }\n    return '[' + strs.join(', ') + ']';\n  }\n}\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { List } from './data/list.js';\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nexport { greedyFAS };\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(\n    _.map(results, function (e) {\n      return g.outEdges(e.v, e.w);\n    })\n  );\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, in: 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, (fasGraph.node(e.v).out += weight));\n    maxIn = Math.max(maxIn, (fasGraph.node(e.w)['in'] += weight));\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n","import * as _ from 'lodash-es';\nimport { greedyFAS } from './greedy-fas.js';\n\nexport { run, undo };\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function (e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n","import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\n\nexport {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime,\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen),\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    })\n  );\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    })\n  );\n\n  var layers = [];\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0,\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(\n    _.map(g.nodes(), function (v) {\n      var rank = g.node(v).rank;\n      if (!_.isUndefined(rank)) {\n        return rank;\n      }\n    })\n  );\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { adjust, undo };\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (_.has(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (_.has(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, undo };\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank,\n    };\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      // @ts-expect-error\n      attrs.dummy = 'edge-label';\n      // @ts-expect-error\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n","import * as _ from 'lodash-es';\n\nexport { longestPath, slack };\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(\n      _.map(g.outEdges(v), function (e) {\n        return dfs(e.w) - g.edge(e).minlen;\n      })\n    );\n\n    if (\n      rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n      rank === undefined || // return value of _.map([]) for Lodash 4\n      rank === null\n    ) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport { slack } from './util.js';\n\nexport { feasibleTree };\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n        w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import * as _ from 'lodash-es';\nimport { PriorityQueue } from '../data/priority-queue.js';\n\nexport { dijkstra };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(\n    g,\n    String(source),\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      }\n  );\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new PriorityQueue();\n  var v, vEntry;\n\n  var updateNeighbors = function (edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\n        'dijkstra does not allow negative edge weights. ' +\n          'Bad edge: ' +\n          edge +\n          ' Weight: ' +\n          weight\n      );\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function (v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n","import * as _ from 'lodash-es';\n\nexport { floydWarshall };\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(\n    g,\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn ||\n      function (v) {\n        return g.outEdges(v);\n      }\n  );\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function (v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function (w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function (edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function (k) {\n    var rowK = results[k];\n    nodes.forEach(function (i) {\n      var rowI = results[i];\n      nodes.forEach(function (j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n","import baseProperty from './_baseProperty.js';\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nexport default asciiSize;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nexport default unicodeSize;\n","import * as _ from 'lodash-es';\n\nexport { topsort, CycleException };\n\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n","import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n","import * as _ from 'lodash-es';\nimport * as alg from '../../graphlib/alg/index.js';\nimport { simplify } from '../util.js';\nimport { feasibleTree } from './feasible-tree.js';\nimport { longestPath, slack } from './util.js';\n\nexport { networkSimplex };\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  longestPath(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = alg.postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return (\n      flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n      flip !== isDescendant(t, t.node(edge.w), tailLabel)\n    );\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = alg.preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","import { dfs } from './dfs.js';\n\nexport { postorder };\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, 'post');\n}\n","import { dfs } from './dfs.js';\n\nexport { preorder };\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, 'pre');\n}\n","import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, cleanup };\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, '_bt');\n  var bottom = util.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(\n    g.edges(),\n    function (acc, e) {\n      return acc + g.edge(e).weight;\n    },\n    0\n  );\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\n\nexport { buildLayerGraph };\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true })\n      .setGraph({ root: root })\n      .setDefaultNodeLabel(function (v) {\n        return g.node(v);\n      });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank],\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId('_root'))));\n  return v;\n}\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n","import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import * as _ from 'lodash-es';\n\nexport { crossCount };\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(\n    southLayer,\n    _.map(southLayer, function (v, i) {\n      return i;\n    })\n  );\n  var southEntries = _.flatten(\n    _.map(northLayer, function (v) {\n      return _.sortBy(\n        _.map(g.outEdges(v), function (e) {\n          return { pos: southPos[e.w], weight: g.edge(e).weight };\n        }),\n        'pos'\n      );\n    })\n  );\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(\n    // @ts-expect-error\n    southEntries.forEach(function (entry) {\n      var index = entry.pos + firstIndex;\n      tree[index] += entry.weight;\n      var weightSum = 0;\n      // @ts-expect-error\n      while (index > 0) {\n        // @ts-expect-error\n        if (index % 2) {\n          weightSum += tree[index + 1];\n        }\n        // @ts-expect-error\n        index = (index - 1) >> 1;\n        tree[index] += entry.weight;\n      }\n      cc += entry.weight * weightSum;\n    })\n  );\n\n  return cc;\n}\n","import * as _ from 'lodash-es';\n\nexport { resolveConflicts };\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function (entry, i) {\n    var tmp = (mappedEntries[entry.v] = {\n      indegree: 0,\n      in: [],\n      out: [],\n      vs: [entry.v],\n      i: i,\n    });\n    if (!_.isUndefined(entry.barycenter)) {\n      // @ts-expect-error\n      tmp.barycenter = entry.barycenter;\n      // @ts-expect-error\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    // @ts-expect-error\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (\n        _.isUndefined(uEntry.barycenter) ||\n        _.isUndefined(vEntry.barycenter) ||\n        uEntry.barycenter >= vEntry.barycenter\n      ) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry['in'].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(\n    _.filter(entries, function (entry) {\n      return !entry.merged;\n    }),\n    function (entry) {\n      return _.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n    }\n  );\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\n\nexport { sort };\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return _.has(entry, 'barycenter');\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function (entry) {\n      return -entry.i;\n    }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","import * as _ from 'lodash-es';\nimport { barycenter } from './barycenter.js';\nimport { resolveConflicts } from './resolve-conflicts.js';\nimport { sort } from './sort.js';\n\nexport { sortSubgraph };\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br]);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter =\n        (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(\n      entry.vs.map(function (v) {\n        if (subgraphs[v]) {\n          return subgraphs[v].vs;\n        }\n        return v;\n      })\n    );\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter =\n      (target.barycenter * target.weight + other.barycenter * other.weight) /\n      (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { barycenter };\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(\n        inV,\n        function (acc, e) {\n          var edge = g.edge(e),\n            nodeU = g.node(e.v);\n          return {\n            sum: acc.sum + edge.weight * nodeU.order,\n            weight: acc.weight + edge.weight,\n          };\n        },\n        { sum: 0, weight: 0 }\n      );\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight,\n      };\n    }\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\nimport { addSubgraphConstraints } from './add-subgraph-constraints.js';\nimport { buildLayerGraph } from './build-layer-graph.js';\nimport { crossCount } from './cross-count.js';\nimport { initOrder } from './init-order.js';\nimport { sortSubgraph } from './sort-subgraph.js';\n\nexport { order };\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges'),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { initOrder };\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    })\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","import * as _ from 'lodash-es';\n\nexport { parentDummyChains };\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (\n          pathIdx < path.length - 1 &&\n          g.node((pathV = path[pathIdx + 1])).minRank <= node.rank\n        ) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n","import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nexport {\n  positionX,\n  findType1Conflicts,\n  findType2Conflicts,\n  addConflict,\n  hasConflict,\n  verticalAlignment,\n  horizontalCompaction,\n  alignCoordinates,\n  findSmallestWidthAlignment,\n  balance,\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        // @ts-expect-error\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          // @ts-expect-error\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? 'borderLeft' : 'borderRight';\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach(['u', 'd'], function (vert) {\n    _.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === 'l' ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _.values(layering).reverse();\n    _.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === 'u' ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;\n          break;\n        case 'r':\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;\n          break;\n        case 'r':\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\nimport { positionX } from './bk.js';\n\nexport { position };\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forOwn(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(\n      _.map(layer, function (v) {\n        return g.node(v).height;\n      })\n    );\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    acyclic.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g);\n  });\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    util.removeEmptyRanks(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    util.normalizeRanks(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    normalize.run(g);\n  });\n  time('    parentDummyChains', function () {\n    parentDummyChains(g);\n  });\n  time('    addBorderSegments', function () {\n    addBorderSegments(g);\n  });\n  time('    order', function () {\n    order(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g);\n  });\n  time('    position', function () {\n    position(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    normalize.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    acyclic.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs))\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs))\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se'\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n","import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n","import * as _ from 'lodash-es';\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\nexport class Graph {\n  constructor(opts = {}) {\n    this._isDirected = _.has(opts, 'directed') ? opts.directed : true;\n    this._isMultigraph = _.has(opts, 'multigraph') ? opts.multigraph : false;\n    this._isCompound = _.has(opts, 'compound') ? opts.compound : false;\n\n    // Label for the graph itself\n    this._label = undefined;\n\n    // Defaults to be set when creating a new node\n    this._defaultNodeLabelFn = _.constant(undefined);\n\n    // Defaults to be set when creating a new edge\n    this._defaultEdgeLabelFn = _.constant(undefined);\n\n    // v -> label\n    this._nodes = {};\n\n    if (this._isCompound) {\n      // v -> parent\n      this._parent = {};\n\n      // v -> children\n      this._children = {};\n      this._children[GRAPH_NODE] = {};\n    }\n\n    // v -> edgeObj\n    this._in = {};\n\n    // u -> v -> Number\n    this._preds = {};\n\n    // v -> edgeObj\n    this._out = {};\n\n    // v -> w -> Number\n    this._sucs = {};\n\n    // e -> edgeObj\n    this._edgeObjs = {};\n\n    // e -> label\n    this._edgeLabels = {};\n  }\n  /* === Graph functions ========= */\n  isDirected() {\n    return this._isDirected;\n  }\n  isMultigraph() {\n    return this._isMultigraph;\n  }\n  isCompound() {\n    return this._isCompound;\n  }\n  setGraph(label) {\n    this._label = label;\n    return this;\n  }\n  graph() {\n    return this._label;\n  }\n  /* === Node functions ========== */\n  setDefaultNodeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultNodeLabelFn = newDefault;\n    return this;\n  }\n  nodeCount() {\n    return this._nodeCount;\n  }\n  nodes() {\n    return _.keys(this._nodes);\n  }\n  sources() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._in[v]);\n    });\n  }\n  sinks() {\n    var self = this;\n    return _.filter(this.nodes(), function (v) {\n      return _.isEmpty(self._out[v]);\n    });\n  }\n  setNodes(vs, value) {\n    var args = arguments;\n    var self = this;\n    _.each(vs, function (v) {\n      if (args.length > 1) {\n        self.setNode(v, value);\n      } else {\n        self.setNode(v);\n      }\n    });\n    return this;\n  }\n  setNode(v, value) {\n    if (_.has(this._nodes, v)) {\n      if (arguments.length > 1) {\n        this._nodes[v] = value;\n      }\n      return this;\n    }\n\n    // @ts-expect-error\n    this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n    if (this._isCompound) {\n      this._parent[v] = GRAPH_NODE;\n      this._children[v] = {};\n      this._children[GRAPH_NODE][v] = true;\n    }\n    this._in[v] = {};\n    this._preds[v] = {};\n    this._out[v] = {};\n    this._sucs[v] = {};\n    ++this._nodeCount;\n    return this;\n  }\n  node(v) {\n    return this._nodes[v];\n  }\n  hasNode(v) {\n    return _.has(this._nodes, v);\n  }\n  removeNode(v) {\n    var self = this;\n    if (_.has(this._nodes, v)) {\n      var removeEdge = function (e) {\n        self.removeEdge(self._edgeObjs[e]);\n      };\n      delete this._nodes[v];\n      if (this._isCompound) {\n        this._removeFromParentsChildList(v);\n        delete this._parent[v];\n        _.each(this.children(v), function (child) {\n          self.setParent(child);\n        });\n        delete this._children[v];\n      }\n      _.each(_.keys(this._in[v]), removeEdge);\n      delete this._in[v];\n      delete this._preds[v];\n      _.each(_.keys(this._out[v]), removeEdge);\n      delete this._out[v];\n      delete this._sucs[v];\n      --this._nodeCount;\n    }\n    return this;\n  }\n  setParent(v, parent) {\n    if (!this._isCompound) {\n      throw new Error('Cannot set parent in a non-compound graph');\n    }\n\n    if (_.isUndefined(parent)) {\n      parent = GRAPH_NODE;\n    } else {\n      // Coerce parent to string\n      parent += '';\n      for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n        if (ancestor === v) {\n          throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create a cycle');\n        }\n      }\n\n      this.setNode(parent);\n    }\n\n    this.setNode(v);\n    this._removeFromParentsChildList(v);\n    this._parent[v] = parent;\n    this._children[parent][v] = true;\n    return this;\n  }\n  _removeFromParentsChildList(v) {\n    delete this._children[this._parent[v]][v];\n  }\n  parent(v) {\n    if (this._isCompound) {\n      var parent = this._parent[v];\n      if (parent !== GRAPH_NODE) {\n        return parent;\n      }\n    }\n  }\n  children(v) {\n    if (_.isUndefined(v)) {\n      v = GRAPH_NODE;\n    }\n\n    if (this._isCompound) {\n      var children = this._children[v];\n      if (children) {\n        return _.keys(children);\n      }\n    } else if (v === GRAPH_NODE) {\n      return this.nodes();\n    } else if (this.hasNode(v)) {\n      return [];\n    }\n  }\n  predecessors(v) {\n    var predsV = this._preds[v];\n    if (predsV) {\n      return _.keys(predsV);\n    }\n  }\n  successors(v) {\n    var sucsV = this._sucs[v];\n    if (sucsV) {\n      return _.keys(sucsV);\n    }\n  }\n  neighbors(v) {\n    var preds = this.predecessors(v);\n    if (preds) {\n      return _.union(preds, this.successors(v));\n    }\n  }\n  isLeaf(v) {\n    var neighbors;\n    if (this.isDirected()) {\n      neighbors = this.successors(v);\n    } else {\n      neighbors = this.neighbors(v);\n    }\n    return neighbors.length === 0;\n  }\n  filterNodes(filter) {\n    // @ts-expect-error\n    var copy = new this.constructor({\n      directed: this._isDirected,\n      multigraph: this._isMultigraph,\n      compound: this._isCompound,\n    });\n\n    copy.setGraph(this.graph());\n\n    var self = this;\n    _.each(this._nodes, function (value, v) {\n      if (filter(v)) {\n        copy.setNode(v, value);\n      }\n    });\n\n    _.each(this._edgeObjs, function (e) {\n      // @ts-expect-error\n      if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n        copy.setEdge(e, self.edge(e));\n      }\n    });\n\n    var parents = {};\n    function findParent(v) {\n      var parent = self.parent(v);\n      if (parent === undefined || copy.hasNode(parent)) {\n        parents[v] = parent;\n        return parent;\n      } else if (parent in parents) {\n        return parents[parent];\n      } else {\n        return findParent(parent);\n      }\n    }\n\n    if (this._isCompound) {\n      _.each(copy.nodes(), function (v) {\n        copy.setParent(v, findParent(v));\n      });\n    }\n\n    return copy;\n  }\n  /* === Edge functions ========== */\n  setDefaultEdgeLabel(newDefault) {\n    if (!_.isFunction(newDefault)) {\n      newDefault = _.constant(newDefault);\n    }\n    this._defaultEdgeLabelFn = newDefault;\n    return this;\n  }\n  edgeCount() {\n    return this._edgeCount;\n  }\n  edges() {\n    return _.values(this._edgeObjs);\n  }\n  setPath(vs, value) {\n    var self = this;\n    var args = arguments;\n    _.reduce(vs, function (v, w) {\n      if (args.length > 1) {\n        self.setEdge(v, w, value);\n      } else {\n        self.setEdge(v, w);\n      }\n      return w;\n    });\n    return this;\n  }\n  /*\n   * setEdge(v, w, [value, [name]])\n   * setEdge({ v, w, [name] }, [value])\n   */\n  setEdge() {\n    var v, w, name, value;\n    var valueSpecified = false;\n    var arg0 = arguments[0];\n\n    if (typeof arg0 === 'object' && arg0 !== null && 'v' in arg0) {\n      v = arg0.v;\n      w = arg0.w;\n      name = arg0.name;\n      if (arguments.length === 2) {\n        value = arguments[1];\n        valueSpecified = true;\n      }\n    } else {\n      v = arg0;\n      w = arguments[1];\n      name = arguments[3];\n      if (arguments.length > 2) {\n        value = arguments[2];\n        valueSpecified = true;\n      }\n    }\n\n    v = '' + v;\n    w = '' + w;\n    if (!_.isUndefined(name)) {\n      name = '' + name;\n    }\n\n    var e = edgeArgsToId(this._isDirected, v, w, name);\n    if (_.has(this._edgeLabels, e)) {\n      if (valueSpecified) {\n        this._edgeLabels[e] = value;\n      }\n      return this;\n    }\n\n    if (!_.isUndefined(name) && !this._isMultigraph) {\n      throw new Error('Cannot set a named edge when isMultigraph = false');\n    }\n\n    // It didn't exist, so we need to create it.\n    // First ensure the nodes exist.\n    this.setNode(v);\n    this.setNode(w);\n\n    // @ts-expect-error\n    this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n    var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n    // Ensure we add undirected edges in a consistent way.\n    v = edgeObj.v;\n    w = edgeObj.w;\n\n    Object.freeze(edgeObj);\n    this._edgeObjs[e] = edgeObj;\n    incrementOrInitEntry(this._preds[w], v);\n    incrementOrInitEntry(this._sucs[v], w);\n    this._in[w][e] = edgeObj;\n    this._out[v][e] = edgeObj;\n    this._edgeCount++;\n    return this;\n  }\n  edge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return this._edgeLabels[e];\n  }\n  hasEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    return _.has(this._edgeLabels, e);\n  }\n  removeEdge(v, w, name) {\n    var e =\n      arguments.length === 1\n        ? edgeObjToId(this._isDirected, arguments[0])\n        : edgeArgsToId(this._isDirected, v, w, name);\n    var edge = this._edgeObjs[e];\n    if (edge) {\n      v = edge.v;\n      w = edge.w;\n      delete this._edgeLabels[e];\n      delete this._edgeObjs[e];\n      decrementOrRemoveEntry(this._preds[w], v);\n      decrementOrRemoveEntry(this._sucs[v], w);\n      delete this._in[w][e];\n      delete this._out[v][e];\n      this._edgeCount--;\n    }\n    return this;\n  }\n  inEdges(v, u) {\n    var inV = this._in[v];\n    if (inV) {\n      var edges = _.values(inV);\n      if (!u) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.v === u;\n      });\n    }\n  }\n  outEdges(v, w) {\n    var outV = this._out[v];\n    if (outV) {\n      var edges = _.values(outV);\n      if (!w) {\n        return edges;\n      }\n      return _.filter(edges, function (edge) {\n        return edge.w === w;\n      });\n    }\n  }\n  nodeEdges(v, w) {\n    var inEdges = this.inEdges(v, w);\n    if (inEdges) {\n      return inEdges.concat(this.outEdges(v, w));\n    }\n  }\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n","import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import identity from './identity.js';\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nexport default castFunction;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import arrayEach from './_arrayEach.js';\nimport baseEach from './_baseEach.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEach;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduce;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nexport default baseReduce;\n","import arrayReduce from './_arrayReduce.js';\nimport baseEach from './_baseEach.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseReduce from './_baseReduce.js';\nimport isArray from './isArray.js';\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nexport default reduce;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;\n","import baseValues from './_baseValues.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nexport default values;\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","import { l as log, M as decodeEntities } from \"./mermaid-b5860b54.js\";\nimport { fromMarkdown } from \"mdast-util-from-markdown\";\nimport { dedent } from \"ts-dedent\";\nfunction preprocessMarkdown(markdown) {\n  const withoutMultipleNewlines = markdown.replace(/\\n{2,}/g, \"\\n\");\n  const withoutExtraSpaces = dedent(withoutMultipleNewlines);\n  return withoutExtraSpaces;\n}\nfunction markdownToLines(markdown) {\n  const preprocessedMarkdown = preprocessMarkdown(markdown);\n  const { children } = fromMarkdown(preprocessedMarkdown);\n  const lines = [[]];\n  let currentLine = 0;\n  function processNode(node, parentType = \"normal\") {\n    if (node.type === \"text\") {\n      const textLines = node.value.split(\"\\n\");\n      textLines.forEach((textLine, index) => {\n        if (index !== 0) {\n          currentLine++;\n          lines.push([]);\n        }\n        textLine.split(\" \").forEach((word) => {\n          if (word) {\n            lines[currentLine].push({ content: word, type: parentType });\n          }\n        });\n      });\n    } else if (node.type === \"strong\" || node.type === \"emphasis\") {\n      node.children.forEach((contentNode) => {\n        processNode(contentNode, node.type);\n      });\n    }\n  }\n  children.forEach((treeNode) => {\n    if (treeNode.type === \"paragraph\") {\n      treeNode.children.forEach((contentNode) => {\n        processNode(contentNode);\n      });\n    }\n  });\n  return lines;\n}\nfunction markdownToHTML(markdown) {\n  const { children } = fromMarkdown(markdown);\n  function output(node) {\n    if (node.type === \"text\") {\n      return node.value.replace(/\\n/g, \"<br/>\");\n    } else if (node.type === \"strong\") {\n      return `<strong>${node.children.map(output).join(\"\")}</strong>`;\n    } else if (node.type === \"emphasis\") {\n      return `<em>${node.children.map(output).join(\"\")}</em>`;\n    } else if (node.type === \"paragraph\") {\n      return `<p>${node.children.map(output).join(\"\")}</p>`;\n    }\n    return `Unsupported markdown: ${node.type}`;\n  }\n  return children.map(output).join(\"\");\n}\nfunction splitTextToChars(text) {\n  if (Intl.Segmenter) {\n    return [...new Intl.Segmenter().segment(text)].map((s) => s.segment);\n  }\n  return [...text];\n}\nfunction splitWordToFitWidth(checkFit, word) {\n  const characters = splitTextToChars(word.content);\n  return splitWordToFitWidthRecursion(checkFit, [], characters, word.type);\n}\nfunction splitWordToFitWidthRecursion(checkFit, usedChars, remainingChars, type) {\n  if (remainingChars.length === 0) {\n    return [\n      { content: usedChars.join(\"\"), type },\n      { content: \"\", type }\n    ];\n  }\n  const [nextChar, ...rest] = remainingChars;\n  const newWord = [...usedChars, nextChar];\n  if (checkFit([{ content: newWord.join(\"\"), type }])) {\n    return splitWordToFitWidthRecursion(checkFit, newWord, rest, type);\n  }\n  if (usedChars.length === 0 && nextChar) {\n    usedChars.push(nextChar);\n    remainingChars.shift();\n  }\n  return [\n    { content: usedChars.join(\"\"), type },\n    { content: remainingChars.join(\"\"), type }\n  ];\n}\nfunction splitLineToFitWidth(line, checkFit) {\n  if (line.some(({ content }) => content.includes(\"\\n\"))) {\n    throw new Error(\"splitLineToFitWidth does not support newlines in the line\");\n  }\n  return splitLineToFitWidthRecursion(line, checkFit);\n}\nfunction splitLineToFitWidthRecursion(words, checkFit, lines = [], newLine = []) {\n  if (words.length === 0) {\n    if (newLine.length > 0) {\n      lines.push(newLine);\n    }\n    return lines.length > 0 ? lines : [];\n  }\n  let joiner = \"\";\n  if (words[0].content === \" \") {\n    joiner = \" \";\n    words.shift();\n  }\n  const nextWord = words.shift() ?? { content: \" \", type: \"normal\" };\n  const lineWithNextWord = [...newLine];\n  if (joiner !== \"\") {\n    lineWithNextWord.push({ content: joiner, type: \"normal\" });\n  }\n  lineWithNextWord.push(nextWord);\n  if (checkFit(lineWithNextWord)) {\n    return splitLineToFitWidthRecursion(words, checkFit, lines, lineWithNextWord);\n  }\n  if (newLine.length > 0) {\n    lines.push(newLine);\n    words.unshift(nextWord);\n  } else if (nextWord.content) {\n    const [line, rest] = splitWordToFitWidth(checkFit, nextWord);\n    lines.push([line]);\n    if (rest.content) {\n      words.unshift(rest);\n    }\n  }\n  return splitLineToFitWidthRecursion(words, checkFit, lines);\n}\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\nfunction addHtmlSpan(element, node, width, classes, addBackground = false) {\n  const fo = element.append(\"foreignObject\");\n  const div = fo.append(\"xhtml:div\");\n  const label = node.label;\n  const labelClass = node.isNode ? \"nodeLabel\" : \"edgeLabel\";\n  div.html(\n    `\n    <span class=\"${labelClass} ${classes}\" ` + (node.labelStyle ? 'style=\"' + node.labelStyle + '\"' : \"\") + \">\" + label + \"</span>\"\n  );\n  applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"table-cell\");\n  div.style(\"white-space\", \"nowrap\");\n  div.style(\"max-width\", width + \"px\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n  if (addBackground) {\n    div.attr(\"class\", \"labelBkg\");\n  }\n  let bbox = div.node().getBoundingClientRect();\n  if (bbox.width === width) {\n    div.style(\"display\", \"table\");\n    div.style(\"white-space\", \"break-spaces\");\n    div.style(\"width\", width + \"px\");\n    bbox = div.node().getBoundingClientRect();\n  }\n  fo.style(\"width\", bbox.width);\n  fo.style(\"height\", bbox.height);\n  return fo.node();\n}\nfunction createTspan(textElement, lineIndex, lineHeight) {\n  return textElement.append(\"tspan\").attr(\"class\", \"text-outer-tspan\").attr(\"x\", 0).attr(\"y\", lineIndex * lineHeight - 0.1 + \"em\").attr(\"dy\", lineHeight + \"em\");\n}\nfunction computeWidthOfText(parentNode, lineHeight, line) {\n  const testElement = parentNode.append(\"text\");\n  const testSpan = createTspan(testElement, 1, lineHeight);\n  updateTextContentAndStyles(testSpan, line);\n  const textLength = testSpan.node().getComputedTextLength();\n  testElement.remove();\n  return textLength;\n}\nfunction computeDimensionOfText(parentNode, lineHeight, text) {\n  var _a;\n  const testElement = parentNode.append(\"text\");\n  const testSpan = createTspan(testElement, 1, lineHeight);\n  updateTextContentAndStyles(testSpan, [{ content: text, type: \"normal\" }]);\n  const textDimension = (_a = testSpan.node()) == null ? void 0 : _a.getBoundingClientRect();\n  if (textDimension) {\n    testElement.remove();\n  }\n  return textDimension;\n}\nfunction createFormattedText(width, g, structuredText, addBackground = false) {\n  const lineHeight = 1.1;\n  const labelGroup = g.append(\"g\");\n  const bkg = labelGroup.insert(\"rect\").attr(\"class\", \"background\");\n  const textElement = labelGroup.append(\"text\").attr(\"y\", \"-10.1\");\n  let lineIndex = 0;\n  for (const line of structuredText) {\n    const checkWidth = (line2) => computeWidthOfText(labelGroup, lineHeight, line2) <= width;\n    const linesUnderWidth = checkWidth(line) ? [line] : splitLineToFitWidth(line, checkWidth);\n    for (const preparedLine of linesUnderWidth) {\n      const tspan = createTspan(textElement, lineIndex, lineHeight);\n      updateTextContentAndStyles(tspan, preparedLine);\n      lineIndex++;\n    }\n  }\n  if (addBackground) {\n    const bbox = textElement.node().getBBox();\n    const padding = 2;\n    bkg.attr(\"x\", -padding).attr(\"y\", -padding).attr(\"width\", bbox.width + 2 * padding).attr(\"height\", bbox.height + 2 * padding);\n    return labelGroup.node();\n  } else {\n    return textElement.node();\n  }\n}\nfunction updateTextContentAndStyles(tspan, wrappedLine) {\n  tspan.text(\"\");\n  wrappedLine.forEach((word, index) => {\n    const innerTspan = tspan.append(\"tspan\").attr(\"font-style\", word.type === \"emphasis\" ? \"italic\" : \"normal\").attr(\"class\", \"text-inner-tspan\").attr(\"font-weight\", word.type === \"strong\" ? \"bold\" : \"normal\");\n    if (index === 0) {\n      innerTspan.text(word.content);\n    } else {\n      innerTspan.text(\" \" + word.content);\n    }\n  });\n}\nconst createText = (el, text = \"\", {\n  style = \"\",\n  isTitle = false,\n  classes = \"\",\n  useHtmlLabels = true,\n  isNode = true,\n  width = 200,\n  addSvgBackground = false\n} = {}) => {\n  log.info(\"createText\", text, style, isTitle, classes, useHtmlLabels, isNode, addSvgBackground);\n  if (useHtmlLabels) {\n    const htmlText = markdownToHTML(text);\n    const node = {\n      isNode,\n      label: decodeEntities(htmlText).replace(\n        /fa[blrs]?:fa-[\\w-]+/g,\n        // cspell: disable-line\n        (s) => `<i class='${s.replace(\":\", \" \")}'></i>`\n      ),\n      labelStyle: style.replace(\"fill:\", \"color:\")\n    };\n    const vertexNode = addHtmlSpan(el, node, width, classes, addSvgBackground);\n    return vertexNode;\n  } else {\n    const structuredText = markdownToLines(text);\n    const svgLabel = createFormattedText(width, el, structuredText, addSvgBackground);\n    return svgLabel;\n  }\n};\nexport {\n  createText as a,\n  computeDimensionOfText as c\n};\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n"],"names":["List","constructor","sentinel","_next","_prev","this","_sentinel","dequeue","entry","unlink","enqueue","toString","strs","curr","push","JSON","stringify","filterOutLinks","join","k","v","DEFAULT_WEIGHT_FN","greedyFAS","g","weightFn","nodeCount","state","fasGraph","maxIn","maxOut","nodes","setNode","in","out","edges","e","prevWeight","edge","w","weight","edgeWeight","setEdge","Math","max","node","buckets","map","zeroIdx","assignBucket","graph","buildState","results","sources","length","sinks","removeNode","i","concat","doGreedyFAS","outEdges","collectPredecessors","undefined","inEdges","uEntry","wEntry","run","fas","acyclicer","stack","visited","dfs","dfsFAS","label","removeEdge","forwardName","name","reversed","array","iteratee","comparator","index","value","current","computed","isSymbol","result","other","identity","object","key","Date","now","addDummyNode","type","attrs","hasNode","dummy","asNonCompoundGraph","simplified","multigraph","isMultigraph","setGraph","children","intersectRect","rect","point","sx","sy","x","y","dx","dy","width","h","height","Error","abs","buildLayerMatrix","layering","rank","order","addBorderNode","prefix","arguments","fn","start","console","log","notime","prop","sg","sgNode","borderType","prev","setParent","rankDir","rankdir","toLowerCase","reverseYOne","points","reverseY","swapXYOne","swapXY","swapWidthHeight","swapWidthHeightOne","dummyChains","vRank","wRank","edgeLabel","labelRank","edgeObj","labelpos","normalizeEdge","longestPath","minlen","Number","POSITIVE_INFINITY","slack","feasibleTree","delta","t","directed","size","tightTree","findMinSlackEdge","shiftRanks","nodeEdges","edgeV","findIndexFunc","collection","predicate","fromIndex","iterable","Object","isArrayLike","keys","toFinite","remainder","nativeMax","RegExp","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","vs","navigation","isDirected","successors","neighbors","bind","acc","doDfs","postorder","prototype","networkSimplex","simpleLabel","simplify","initLowLimValues","initCutValues","leaveEdge","exchangeEdges","enterEdge","slice","child","childLab","parent","cutvalue","calcCutValue","assignCutValue","childIsTail","graphEdge","cutValue","u","isOutEdge","pointsToHead","otherWeight","hasEdge","otherCutValue","tree","root","dfsAssignLowLim","nextLim","low","lim","vLabel","wLabel","tailLabel","flip","candidates","isDescendant","f","flipped","updateRanks","rootLabel","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","depths","depth","treeDepths","nodeSep","nestingRoot","sumWeights","nodeRankFactor","top","bottom","borderTop","borderBottom","childNode","childTop","childBottom","thisWeight","nestingEdge","CLONE_DEEP_FLAG","buildLayerGraph","relationship","createRootNode","compound","setDefaultNodeLabel","minRank","maxRank","borderLeft","borderRight","props","values","assignFunc","valsLength","comparer","sort","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","orders","objCriteria","criteria","othCriteria","ordersLength","iteratees","isArray","crossCount","cc","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","pos","firstIndex","treeSize","Array","forEach","weightSum","resolveConflicts","entries","cg","mappedEntries","tmp","indegree","barycenter","entryV","entryW","sourceSet","handleIn","vEntry","merged","target","source","sum","min","mergeEntries","handleOut","pop","reverse","doResolveConflicts","biasRight","bias","parts","lhs","rhs","sortable","unsortable","vsIndex","consumeUnsortable","last","sortSubgraph","movable","bl","br","subgraphs","barycenters","inV","nodeU","subgraphResult","expandSubgraphs","predecessors","blPred","brPred","downLayerGraphs","buildLayerGraphs","upLayerGraphs","simpleNodes","layers","orderedVs","initOrder","assignOrder","best","bestCC","lastBest","sweepLayerGraphs","ranks","layerGraphs","lg","sorted","rootPrev","prevChild","addSubgraphConstraints","layer","parentDummyChains","postorderNums","pathData","lca","vPath","wPath","path","findPath","pathIdx","pathV","ascending","keysIn","findType1Conflicts","conflicts","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","conflictsV","hasConflict","horizontalCompaction","align","reverseSep","xs","blockG","blockGraph","graphLabel","sepFn","edgeSep","sep","nodesep","edgesep","vRoot","uRoot","prevMax","buildBlockGraph","iterate","setXsFunc","nextNodesFunc","elem","reduce","positionX","adjustedLayering","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","findType2Conflicts","xss","vert","horiz","inner","neighborFn","prevIdx","ws","mp","floor","il","ceil","verticalAlignment","smallestWidth","NEGATIVE_INFINITY","halfWidth","findSmallestWidthAlignment","alignTo","alignToVals","alignToMin","alignToMax","alignment","xsVals","alignCoordinates","ul","ignore","balance","position","rankSep","ranksep","prevY","maxHeight","positionY","layout","opts","time","debugTiming","layoutGraph","inputGraph","canonicalize","graphDefaults","selectNumberAttrs","graphNumAttrs","graphAttrs","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","buildLayoutGraph","labeloffset","makeSpaceForEdgeLabels","selfEdges","removeSelfEdges","injectEdgeLabelProxies","offset","assignRankMinMax","removeEdgeLabelProxies","addBorderSegments","orderShift","selfEdge","insertSelfEdges","selfNode","positionSelfEdges","b","l","r","removeBorderNodes","origLabel","fixupEdgeLabelCoords","minX","maxX","minY","maxY","marginX","marginx","marginY","marginy","getExtremes","p","translateGraph","p1","p2","nodeV","nodeW","unshift","assignNodeIntersects","reversePointsForReversedEdges","runLayout","inputLabel","layoutLabel","updateInputGraph","obj","newAttrs","createSet","includes","isCommon","seen","set","outer","seenIndex","arrays","isArrayLikeObject","DEFAULT_EDGE_NAME","GRAPH_NODE","EDGE_KEY_DELIM","Graph","_isDirected","_isMultigraph","_isCompound","_label","_defaultNodeLabelFn","_defaultEdgeLabelFn","_nodes","_parent","_children","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","isCompound","newDefault","_nodeCount","self","setNodes","args","_removeFromParentsChildList","ancestor","predsV","sucsV","preds","isLeaf","filterNodes","filter","copy","parents","findParent","setDefaultEdgeLabel","edgeCount","_edgeCount","setPath","valueSpecified","arg0","edgeArgsToId","v_","w_","edgeArgsToObj","freeze","incrementOrInitEntry","edgeObjToId","decrementOrRemoveEntry","outV","__data__","has","SetCache","add","resIndex","getOwnPropertySymbols","stubArray","hasOwnProperty","call","input","dataView","isDeep","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","symbolProto","symbolValueOf","valueOf","symbol","tag","Ctor","isObjectLike","nodeIsMap","isMap","nodeIsSet","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","isFlat","isFull","isObject","isArr","isFunc","isBuffer","stacked","get","subValue","keysFunc","eachFunc","fromRight","spreadableSymbol","isConcatSpreadable","isArguments","baseFlatten","isStrict","symbolsFunc","equalFunc","isPartial","arrLength","othLength","arrStacked","othStacked","arrValue","othValue","compared","othIndex","eq","message","convert","objProps","objLength","objStacked","skipCtor","objValue","objCtor","othCtor","arrayTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","baseIsEqual","matchData","noCustomizer","data","srcValue","defaultValue","hasIn","cache","rePropName","reEscapeChar","func","memoize","clear","string","charCodeAt","replace","match","number","quote","subString","propertyIsEnumerable","nativeGetSymbols","getSymbols","hasFunc","reIsDeepProp","reIsPlainProp","test","objectProto","defaults","guard","propsIndex","propsLength","nested","newValue","paths","flatten","nativeCeil","end","step","accumulator","initAccum","reWhitespace","charAt","reTrimStart","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isBinary","INFINITY","symbolToString","baseToString","idCounter","id","emptyOptions","one","includeImageAlt","includeHtml","Boolean","alt","splice","list","remove","items","parameters","chunkStart","from","syntaxExtension","all","extension","hook","left","right","code","constructs","existing","before","factorySpace","effects","ok","limit","enter","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","next","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","assign","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","line","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","nok","document","disable","null","blankLine","after","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","column","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","String","fromCharCode","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","shift","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","toUpperCase","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","between","tailExitIndex","headEnterIndex","parse","options","extensions","combineExtensions","search","decodeNumericCharacterReference","base","characterEscapeOrReference","decode","$0","$1","$2","hex","own","fromMarkdown","encoding","config","transforms","canContainEols","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlText","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","settings","lang","title","url","referenceType","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","preprocess","d","combined","markdownToLines","markdown","preprocessedMarkdown","withoutMultipleNewlines","preprocessMarkdown","lines","currentLine","processNode","parentType","split","textLine","word","contentNode","treeNode","splitWordToFitWidth","checkFit","splitWordToFitWidthRecursion","Intl","Segmenter","segment","s","usedChars","remainingChars","nextChar","rest","newWord","splitLineToFitWidth","some","splitLineToFitWidthRecursion","words","newLine","joiner","nextWord","lineWithNextWord","createTspan","textElement","lineHeight","append","attr","computeWidthOfText","parentNode","testElement","testSpan","updateTextContentAndStyles","textLength","getComputedTextLength","computeDimensionOfText","_a","textDimension","getBoundingClientRect","tspan","wrappedLine","innerTspan","createText","el","style","isTitle","classes","useHtmlLabels","isNode","addSvgBackground","output","markdownToHTML","vertexNode","element","addBackground","fo","div","labelClass","dom","styleFn","labelStyle","bbox","addHtmlSpan","svgLabel","structuredText","labelGroup","bkg","insert","checkWidth","line2","linesUnderWidth","preparedLine","getBBox","padding","createFormattedText","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","stringifyPosition"],"sourceRoot":""}