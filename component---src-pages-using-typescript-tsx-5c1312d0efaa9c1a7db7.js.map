{"version":3,"file":"component---src-pages-using-typescript-tsx-5c1312d0efaa9c1a7db7.js","mappings":"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","sources":["webpack://cryptography-website/./src/pages/using-typescript.tsx","webpack://cryptography-website/./src/components/Navbar.js","webpack://cryptography-website/./src/components/layout.js","webpack://cryptography-website/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  location,\r\n}) => (\r\n  <Layout>\r\n    <h1>\r\n      Gatsby supports <b>TypeScript by default</b>\r\n    </h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <code>typescript</code> via npm\r\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page <code>{location.pathname}</code> which was\r\n      built on {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"../styles/global.css\";\r\n\r\nconst Navbar = () => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"top-menu\">\r\n      <div className=\"menu-items\">\r\n        <Link to=\"/\" className=\"menu-item\">Home</Link>\r\n        <div\r\n          className=\"menu-item dropdown\"\r\n          onMouseEnter={() => setIsDropdownOpen(true)}\r\n          onMouseLeave={() => setIsDropdownOpen(false)}\r\n        >\r\n          Topics\r\n          <div className={`dropdown-content ${isDropdownOpen ? \"open\" : \"\"}`}>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Main Flow Chart</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 1</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 2</Link>\r\n            <Link to=\"/chapter-3\" className=\"dropdown-item\">Chapter 3</Link>\r\n            <Link to=\"/chapter-4\" className=\"dropdown-item\">Chapter 4</Link>\r\n            <Link to=\"/chapter-5\" className=\"dropdown-item\">Chapter 5</Link>\r\n            <Link to=\"/chapter-6\" className=\"dropdown-item\">Chapter 6</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 7</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 8</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 9</Link>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/examples\" className=\"menu-item\">Examples</Link>\r\n        <Link to=\"/about\" className=\"menu-item\">About</Link>\r\n        <Link to=\"/contact\" className=\"menu-item\">Contact</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../styles/global.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", minHeight: \"100vh\" }}>\r\n\r\n      {/* Main Content */}\r\n      <main\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: \"var(--size-content)\",\r\n          padding: \"var(--space-4)\",\r\n          flex: 1, \r\n        }}\r\n      >\r\n        {children}\r\n      </main>\r\n\r\n      \r\n      <footer\r\n        style={{\r\n          textAlign: \"center\",\r\n          padding: \"var(--space-3) var(--space-4)\",\r\n          fontSize: \"var(--font-sm)\",\r\n          backgroundColor: \"#f8f9fa\", \r\n          color: \"#6c757d\", \r\n        }}\r\n      >\r\n        © {new Date().getFullYear()} · Built with Gatsby\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","isDropdownOpen","setIsDropdownOpen","useState","className","onMouseEnter","onMouseLeave","children","style","display","flexDirection","minHeight","margin","maxWidth","padding","flex","textAlign","fontSize","backgroundColor","color","Date","getFullYear","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}