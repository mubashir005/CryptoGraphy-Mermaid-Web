{"version":3,"file":"component---src-templates-flowchart-template-js-76d21ae987b7eec2b08a.js","mappings":"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","sources":["webpack://cryptography-website/./src/components/InfoBox.js","webpack://cryptography-website/./src/components/Navbar.js","webpack://cryptography-website/./src/templates/flowchartTemplate.js"],"sourcesContent":["import React from \"react\";\r\nimport  \"../styles/global.css\"\r\n\r\nconst InfoBox = ({ info }) => {\r\n  return (\r\n    <div\r\n      className=\"info-box\"\r\n      id=\"info-box\"\r\n      style={{\r\n        display: info.title ? \"block\" : \"none\",\r\n      }}\r\n    >\r\n      <h4>{info.title}</h4>\r\n      <p>{info.text}</p>\r\n      <p style={{ fontSize: \"12px\", color: \"#6c757d\" }}>\r\n        <a href={info.link} style={{ color: \"#007bff\" }}>\r\n          Click for more details\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBox;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"../styles/global.css\";\r\n\r\nconst Navbar = () => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"top-menu\">\r\n      <div className=\"menu-items\">\r\n        <Link to=\"/\" className=\"menu-item\">Home</Link>\r\n        <div\r\n          className=\"menu-item dropdown\"\r\n          onMouseEnter={() => setIsDropdownOpen(true)}\r\n          onMouseLeave={() => setIsDropdownOpen(false)}\r\n        >\r\n          Topics\r\n          <div className={`dropdown-content ${isDropdownOpen ? \"open\" : \"\"}`}>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Main Flow Chart</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 1</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 2</Link>\r\n            <Link to=\"/chapter-3\" className=\"dropdown-item\">Chapter 3</Link>\r\n            <Link to=\"/chapter-4\" className=\"dropdown-item\">Chapter 4</Link>\r\n            <Link to=\"/chapter-5\" className=\"dropdown-item\">Chapter 5</Link>\r\n            <Link to=\"/chapter-6\" className=\"dropdown-item\">Chapter 6</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 7</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 8</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 9</Link>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/examples\" className=\"menu-item\">Examples</Link>\r\n        <Link to=\"/about\" className=\"menu-item\">About</Link>\r\n        <Link to=\"/contact\" className=\"menu-item\">Contact</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { useLocation } from \"@reach/router\"; \r\nimport InfoBox from \"../components/InfoBox\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport \"../styles/flowchart.css\";\r\nimport mermaid from \"mermaid\"; // Import Mermaid\r\n\r\nconst FlowchartTemplate = ({ data }) => {\r\n  const location = useLocation(); // ðŸ‘ˆ Detects when user navigates\r\n  const [info, setInfo] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n    link: \"\",\r\n  });\r\n\r\n  const { body, frontmatter } = data.mdx;\r\n  const [infoData, setInfoData] = useState(frontmatter?.infoData || []);\r\n\r\n  useEffect(() => {\r\n    const addCustomListeners = () => {\r\n      const nodes = document.querySelectorAll(\".hoverNode,.highlighted-node\");\r\n\r\n      nodes.forEach((node) => {\r\n        node.addEventListener(\"mouseover\", (event) => {\r\n          const nodeId = node.textContent.trim();\r\n          const nodeInfo = infoData.find((item) => item.id === nodeId);\r\n\r\n          if (nodeInfo) {\r\n            setInfo(nodeInfo);\r\n            const infoBox = document.getElementById(\"info-box\");\r\n            if (infoBox) {\r\n              infoBox.style.display = \"block\";\r\n              infoBox.style.left = `${event.clientX + 15}px`;\r\n              infoBox.style.top = `${event.clientY + 15}px`;\r\n            }\r\n          }\r\n        });\r\n\r\n        node.addEventListener(\"mousemove\", (event) => {\r\n          const infoBox = document.getElementById(\"info-box\");\r\n          if (infoBox) {\r\n            infoBox.style.left = `${event.clientX + 15}px`;\r\n            infoBox.style.top = `${event.clientY + 15}px`;\r\n          }\r\n        });\r\n\r\n        node.addEventListener(\"mouseout\", () => {\r\n          setInfo({ title: \"\", text: \"\", link: \"\" });\r\n          const infoBox = document.getElementById(\"info-box\");\r\n          if (infoBox) {\r\n            infoBox.style.display = \"none\";\r\n          }\r\n        });\r\n\r\n        node.addEventListener(\"click\", () => {\r\n          const nodeId = node.textContent.trim();\r\n          const nodeInfo = infoData.find((item) => item.id === nodeId);\r\n\r\n          if (nodeInfo?.link) {\r\n            window.location.href = nodeInfo.link;\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    // Initialize Mermaid\r\n    mermaid.initialize({ startOnLoad: false });\r\n\r\n    // Force re-initialization when navigating back\r\n    setTimeout(() => {\r\n      mermaid.contentLoaded();\r\n      addCustomListeners();\r\n    }, 100);\r\n  }, [body, infoData, location.pathname]); \r\n\r\n  const parseMermaidContent = (content) => {\r\n    return content\r\n      .replace(\"```mermaid\", \"\")\r\n      .replace(\"```\", \"\")\r\n      .trim();\r\n  };\r\n\r\n  return (\r\n    <div key={location.pathname}> \r\n      <Navbar />\r\n      <div className=\"flowchart-container\">\r\n        <h1 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>{frontmatter.title}</h1>\r\n        <div className=\"mermaid-wrapper\">\r\n          {body ? (\r\n            <div className=\"mermaid\">\r\n              {parseMermaidContent(body)}\r\n            </div>\r\n          ) : (\r\n            <p style={{ textAlign: \"center\" }}>No flowchart content available.</p>\r\n          )}\r\n        </div>\r\n        <InfoBox info={info} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query ($id: String!) {\r\n    mdx(id: { eq: $id }) {\r\n      body\r\n      frontmatter {\r\n        title\r\n        infoData {\r\n          id\r\n          title\r\n          text\r\n          link\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FlowchartTemplate;\r\n"],"names":["info","className","id","style","display","title","text","fontSize","color","href","link","isDropdownOpen","setIsDropdownOpen","useState","to","onMouseEnter","onMouseLeave","data","location","useLocation","setInfo","body","frontmatter","mdx","infoData","setInfoData","useEffect","mermaid","initialize","startOnLoad","setTimeout","contentLoaded","document","querySelectorAll","forEach","node","addEventListener","event","nodeId","textContent","trim","nodeInfo","find","item","infoBox","getElementById","left","clientX","top","clientY","window","pathname","key","textAlign","marginBottom","replace"],"sourceRoot":""}