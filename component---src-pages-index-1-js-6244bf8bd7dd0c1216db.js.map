{"version":3,"file":"component---src-pages-index-1-js-6244bf8bd7dd0c1216db.js","mappings":"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","sources":["webpack://cryptography-website/./src/components/InfoBox.js","webpack://cryptography-website/./src/components/Navbar.js","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://cryptography-website/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://cryptography-website/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://cryptography-website/./src/assets/network-01.svg","webpack://cryptography-website/./src/components/HomePage.js","webpack://cryptography-website/./src/pages/index1.js"],"sourcesContent":["import React from \"react\";\r\nimport  \"../styles/global.css\"\r\n\r\nconst InfoBox = ({ info }) => {\r\n  return (\r\n    <div\r\n      className=\"info-box\"\r\n      id=\"info-box\"\r\n      style={{\r\n        display: info.title ? \"block\" : \"none\",\r\n      }}\r\n    >\r\n      <h4>{info.title}</h4>\r\n      <p>{info.text}</p>\r\n      <p style={{ fontSize: \"12px\", color: \"#6c757d\" }}>\r\n        <a href={info.link} style={{ color: \"#007bff\" }}>\r\n          Click for more details\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBox;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"../styles/global.css\";\r\n\r\nconst Navbar = () => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"top-menu\">\r\n      <div className=\"menu-items\">\r\n        <Link to=\"/\" className=\"menu-item\">Home</Link>\r\n        <div\r\n          className=\"menu-item dropdown\"\r\n          onMouseEnter={() => setIsDropdownOpen(true)}\r\n          onMouseLeave={() => setIsDropdownOpen(false)}\r\n        >\r\n          Topics\r\n          <div className={`dropdown-content ${isDropdownOpen ? \"open\" : \"\"}`}>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Main Flow Chart</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 1</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 2</Link>\r\n            <Link to=\"/chapter-3\" className=\"dropdown-item\">Chapter 3</Link>\r\n            <Link to=\"/chapter-4\" className=\"dropdown-item\">Chapter 4</Link>\r\n            <Link to=\"/chapter-5\" className=\"dropdown-item\">Chapter 5</Link>\r\n            <Link to=\"/chapter-6\" className=\"dropdown-item\">Chapter 6</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 7</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 8</Link>\r\n            <Link to=\"/chapter-1\" className=\"dropdown-item\">Chapter 9</Link>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/examples\" className=\"menu-item\">Examples</Link>\r\n        <Link to=\"/about\" className=\"menu-item\">About</Link>\r\n        <Link to=\"/contact\" className=\"menu-item\">Contact</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from 'motion-dom';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","export default __webpack_public_path__ + \"static/network-01-36999afedad9e64b05a163a43916255f.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from 'react-dom/client';\r\nimport Navbar from \"./Navbar\";  \r\nimport { motion } from \"framer-motion\";\r\nimport InfoBox from \"./InfoBox\"; \r\nimport networksvg from '../assets/network-01.svg';\r\nimport { Link } from \"gatsby\";\r\nimport \"../styles/global.css\";\r\n\r\n\r\n\r\nconst HomePage = () => {\r\n  const [info, setInfo] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n    link: \"\",\r\n  });\r\n\r\n  const handleMouseOver = (id) => {\r\n    const nodes = {\r\n      csecrecy: {\r\n        title: \"Computational Secrecy\",\r\n        text: \"Computational Secrecy is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/Computational_Security\",\r\n      },\r\n      EAV: {\r\n        title: \"EAV-Security\",\r\n        text: \"EAV-Security is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/Computational_Security\", \r\n      },\r\n      psecrecy: {\r\n        title: \"Perfect secrecy\",\r\n        text: \"Perfect secrecy is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/perfectSecrecyPage\", \r\n      },\r\n      capproach: {\r\n        title: \"Concrete Approach\",\r\n        text: \"Concrete Approach is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/concreteApproach\", \r\n      },\r\n      aapproach: {\r\n        title: \"Asymptotic Approach\",\r\n        text: \"Asymptotic Approach is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/asymptoticApproach\", \r\n      },\r\n      indis: {\r\n        title: \"Indistinguishability\",\r\n        text: \"Indistinguishability is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/indistinguishabilityPage\", \r\n      },\r\n      pgenerator: {\r\n        title: \"Pseudorandom Generators\",\r\n        text: \"Pseudorandom Generators is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/pseudorandomGeneratorPage\", \r\n      },\r\n      poreduction: {\r\n        title: \"Proof of Reduction\",\r\n        text: \"Proof of Reduction is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/proofOfReductionPage\", \r\n      },\r\n    };\r\n\r\n    setInfo(nodes[id]);\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    const infoBox = document.getElementById(\"info-box\");\r\n    if (infoBox) {\r\n      infoBox.style.left = `${event.clientX + 15}px`;\r\n      infoBox.style.top = `${event.clientY - 20}px`;\r\n    }\r\n  };\r\n\r\n  const handleMouseOut = () => {\r\n    setInfo({\r\n      title: \"\",\r\n      text: \"\",\r\n      link: \"\",\r\n    });\r\n  };\r\n\r\n  const handleRedirect = (id) => {\r\n    const nodes = {\r\n      csecrecy: {\r\n        link: \"/Computational_Security\",\r\n      },\r\n      EAV: {\r\n        link: \"/Computational_Security\",\r\n      },\r\n      psecrecy: {\r\n        link: \"/perfectSecrecyPage\",\r\n      },\r\n      capproach: {\r\n        link: \"/concreteApproach\",\r\n      },\r\n      aapproach: {\r\n        link: \"/asymptoticApproach\",\r\n      },\r\n      indis: {\r\n        link: \"/indistinguishabilityPage\",\r\n      },\r\n      pgenerator: {\r\n        link: \"/pseudorandomGeneratorPage\",\r\n      },\r\n      poreduction: {\r\n        link: \"/proofOfReductionPage\",\r\n      },\r\n    };\r\n\r\n    const link = nodes[id]?.link; \r\n    if (link) {\r\n      \r\n      window.location.href = link;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const svgContainer = document.getElementById(\"svg-container\");\r\n    const infoBox = document.getElementById(\"info-box\");\r\n    \r\n    // Fetch and inject the SVG content\r\n    fetch(networksvg)\r\n      .then((response) => response.text())\r\n      .then((svgContent) => {\r\n        svgContainer.innerHTML = svgContent;\r\n\r\n        \r\n        const nodes = [\r\n          \"csecrecy\",\r\n          \"EAV\",\r\n          \"psecrecy\",\r\n          \"capproach\",\r\n          \"aapproach\",\r\n          \"indis\",\r\n          \"pgenerator\",\r\n          \"poreduction\",\r\n        ];\r\n\r\n        nodes.forEach((id) => {\r\n          const element = svgContainer.querySelector(`#${id}`);\r\n          if (element) {\r\n            element.classList.add(\"icon\");\r\n\r\n            element.addEventListener(\"mouseover\", () => {\r\n              handleMouseOver(id); // Show info for the hovered element\r\n              infoBox.style.display = \"block\";\r\n            });\r\n\r\n            element.addEventListener(\"mousemove\", (event) => {\r\n              const offsetX = -200;\r\n              const offsetY = -200;\r\n              infoBox.style.left = `${event.clientX + offsetX}px`;\r\n              infoBox.style.top = `${event.clientY + offsetY}px`;\r\n            });\r\n\r\n            element.addEventListener(\"mouseout\", () => {\r\n              handleMouseOut();\r\n              infoBox.style.display = \"none\";\r\n            });\r\n\r\n            element.addEventListener(\"click\", () => {\r\n              handleRedirect(id); \r\n            });\r\n          }\r\n        });\r\n      })\r\n      .catch((error) => console.error(\"Error loading SVG:\", error));\r\n\r\n    return () => {\r\n      // Clean up event listeners\r\n      const svgElements = document.querySelectorAll(\".icon\");\r\n      svgElements.forEach((element) => {\r\n        element.removeEventListener(\"mouseover\", handleMouseOver);\r\n        element.removeEventListener(\"mousemove\", handleMouseMove);\r\n        element.removeEventListener(\"mouseout\", handleMouseOut);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <motion.div\r\n      initial={{ opacity: 0, scale: 0.8 }}\r\n      animate={{ opacity: 1, scale: 1 }}\r\n      exit={{ opacity: 0, scale: 0.5 }}\r\n      transition={{ duration: 0.5 }}\r\n    ></motion.div>\r\n      <Navbar />\r\n      <div className=\"map-container\">\r\n        <div id=\"svg-container\" />\r\n        <InfoBox info={info} />\r\n      </div>\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <Link to=\"/MarkdownFlowchart\">\r\n          <motion.button\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              whileHover={{ scale: 1.2 }}\r\n              transition={{ duration: 0.3 }}\r\n            >View Markdown Flowchart\r\n          </motion.button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport HomePage from \"../components/HomePage\" // Import the updated HomePage component\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <main>\r\n      <HomePage /> {/* Render the HomePage component */}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"names":["info","className","id","style","display","title","text","fontSize","color","href","link","isDropdownOpen","setIsDropdownOpen","useState","to","onMouseEnter","onMouseLeave","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","cancelFrame","frameSteps","requestAnimationFrame","noop","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","static","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isPrimaryPointer","button","isPrimary","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","focusableElements","isNodeOrChild","parentElement","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","extractEventInfo","point","pageX","pageY","addDomEvent","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","createContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","LayoutGroupContext","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","setInfo","handleMouseOver","csecrecy","EAV","psecrecy","capproach","aapproach","indis","pgenerator","poreduction","handleMouseMove","infoBox","getElementById","clientX","clientY","handleMouseOut","svgContainer","fetch","networksvg","response","svgContent","innerHTML","querySelector","classList","location","handleRedirect","error","console","div","Navbar","InfoBox"],"sourceRoot":""}