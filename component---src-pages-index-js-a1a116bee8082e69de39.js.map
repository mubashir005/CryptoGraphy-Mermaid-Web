{"version":3,"file":"component---src-pages-index-js-a1a116bee8082e69de39.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Navbar.js","webpack://gatsby-starter-default/./src/components/InfoBox.js","webpack://gatsby-starter-default/./src/components/HomePage.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport  \"../styles/global.css\"\r\n\r\nconst Navbar = () => {\r\nreturn(\r\n    <div className=\"top-menu\">\r\n        <div className=\"menu-items\">\r\n            <Link to=\"/\" className=\"menu-item\">Home</Link>\r\n            <Link to=\"/topics\" className=\"menu-item\">Topics</Link>\r\n            <Link to=\"/examples\" className=\"menu-item\">Examples</Link>\r\n            <Link to=\"/about\" className=\"menu-item\">About</Link>\r\n            <Link to=\"/contact\" className=\"menu-item\">Contact</Link>\r\n        </div>\r\n        <input type=\"text\" className=\"search-bar\" placeholder=\"Search topics...\"/>\r\n    </div>\r\n\r\n);\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport  \"../styles/global.css\"\r\n\r\nconst InfoBox = ({ info }) => {\r\n  return (\r\n    <div\r\n      className=\"info-box\"\r\n      id=\"info-box\"\r\n      style={{\r\n        display: info.title ? \"block\" : \"none\",\r\n      }}\r\n    >\r\n      <h4>{info.title}</h4>\r\n      <p>{info.text}</p>\r\n      <p style={{ fontSize: \"12px\", color: \"#6c757d\" }}>\r\n        <a href={info.link} style={{ color: \"#007bff\" }}>\r\n          Click for more details\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./Navbar\";  // Import the Navbar component\r\nimport InfoBox from \"./InfoBox\"; // Import the InfoBox component\r\nimport { Link } from \"gatsby\";\r\nimport  \"../styles/global.css\"\r\n\r\nconst HomePage = () => {\r\n  const [info, setInfo] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n    link: \"\",\r\n  });\r\n\r\n  const handleMouseOver = (id) => {\r\n    const nodes = {\r\n      csecrecy: {\r\n        title: \"Computational Secrecy\",\r\n        text: \"Computational Secrecy is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/nodes\",\r\n      },\r\n      EAV: {\r\n        title: \"EAV-Security\",\r\n        text: \"EAV-Security is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/nodes\",\r\n      },\r\n      psecrecy: {\r\n        title: \"Perfect secrecy\",\r\n        text: \"Perfect secrecy is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/nodes\",\r\n      },\r\n      capproach: {\r\n        title: \"Concrete Approach\",\r\n        text: \"Concrete Approach is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/nodes\",\r\n      },\r\n      aapproach: {\r\n        title: \"Asymptotic Approach\",\r\n        text: \"Asymptotic Approach is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/nodes\",\r\n      },\r\n      indis: {\r\n        title: \"Indistinguishability\",\r\n        text: \"Indistinguishability is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/nodes\",\r\n      },\r\n      pgenerator: {\r\n        title: \"Pseudorandom Generators\",\r\n        text: \"Pseudorandom Generators is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/nodes\",\r\n      },\r\n      poreduction: {\r\n        title: \"Proof of Reduction\",\r\n        text: \"Proof of Reduction is some topic inside this node. More detail will be added afterwards.\",\r\n        link: \"/nodes\",\r\n      },\r\n    };\r\n\r\n    setInfo(nodes[id]);\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    const infoBox = document.getElementById(\"info-box\");\r\n    if (infoBox) {\r\n      infoBox.style.left = `${event.clientX + 15}px`;\r\n      infoBox.style.top = `${event.clientY - 20}px`;\r\n    }\r\n  };\r\n\r\n  const handleMouseOut = () => {\r\n    setInfo({\r\n      title: \"\",\r\n      text: \"\",\r\n      link: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const svgContainer = document.getElementById(\"svg-container\");\r\n    const infoBox = document.getElementById(\"info-box\");\r\n\r\n    // Fetch and inject the SVG content\r\n    fetch('network-01.svg')\r\n      .then(response => response.text())\r\n      .then(svgContent => {\r\n        svgContainer.innerHTML = svgContent;\r\n\r\n        // Add hover and click interactions\r\n        const nodes = [\r\n          \"csecrecy\",\r\n          \"EAV\",\r\n          \"psecrecy\",\r\n          \"capproach\",\r\n          \"aapproach\",\r\n          \"indis\",\r\n          \"pgenerator\",\r\n          \"poreduction\",\r\n        ];\r\n\r\n        nodes.forEach((id) => {\r\n          const element = svgContainer.querySelector(`#${id}`);\r\n          if (element) {\r\n            element.classList.add(\"icon\");\r\n\r\n            element.addEventListener(\"mouseover\", (event) => {\r\n              handleMouseOver(id);  // Show info for the hovered element\r\n              const rect = element.getBoundingClientRect(); // Get element position\r\n\r\n              // Position the info box above the icon\r\n              infoBox.style.display = \"block\";\r\n              infoBox.style.left = `${rect.left + rect.width / 2 - infoBox.offsetWidth / 2}px`;\r\n              infoBox.style.top = `${rect.top - infoBox.offsetHeight - 10}px`;\r\n            });\r\n\r\n            element.addEventListener(\"mousemove\", handleMouseMove);\r\n            element.addEventListener(\"mouseout\", () => {\r\n              handleMouseOut();\r\n              infoBox.style.display = \"none\"; // Hide info box when mouse is out\r\n            });\r\n\r\n            element.addEventListener(\"click\", () => {\r\n              window.location.href = nodes[id].link;  // Redirect on click\r\n            });\r\n          }\r\n        });\r\n      })\r\n      .catch(error => console.error(\"Error loading SVG:\", error));\r\n\r\n    return () => {\r\n      // Clean up event listeners when the component is unmounted\r\n      const svgElements = document.querySelectorAll(\".icon\");\r\n      svgElements.forEach((element) => {\r\n        element.removeEventListener(\"mouseover\", handleMouseOver);\r\n        element.removeEventListener(\"mousemove\", handleMouseMove);\r\n        element.removeEventListener(\"mouseout\", handleMouseOut);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* Include Navbar here */}\r\n      <Navbar />\r\n\r\n      {/* Map Container with SVG */}\r\n      <div className=\"map-container\">\r\n        <div id=\"svg-container\" />\r\n        <InfoBox info={info} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport HomePage from \"../components/HomePage\" // Import the updated HomePage component\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <main>\r\n      <HomePage /> {/* Render the HomePage component */}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"names":["className","Link","to","type","placeholder","info","id","style","display","title","text","fontSize","color","href","link","setInfo","useState","handleMouseOver","csecrecy","EAV","psecrecy","capproach","aapproach","indis","pgenerator","poreduction","handleMouseMove","event","infoBox","document","getElementById","left","clientX","top","clientY","handleMouseOut","useEffect","svgContainer","fetch","then","response","svgContent","innerHTML","nodes","forEach","element","querySelector","classList","add","addEventListener","rect","getBoundingClientRect","width","offsetWidth","offsetHeight","window","location","catch","error","console","querySelectorAll","removeEventListener"],"sourceRoot":""}